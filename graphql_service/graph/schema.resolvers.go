package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"
	"graphql_service/graphql_service/graph/model"
)

// AddPerson is the resolver for the add_person field.
func (r *mutationResolver) AddPerson(ctx context.Context, input model.PersonInput) (*model.PostStatus, error) {
	panic(fmt.Errorf("not implemented: AddPerson - add_person"))
}

// UpdatePerson is the resolver for the update_person field.
func (r *mutationResolver) UpdatePerson(ctx context.Context, input *model.UpdatePersonInput) (*model.PostStatus, error) {
	panic(fmt.Errorf("not implemented: UpdatePerson - update_person"))
}

// DeletePerson is the resolver for the delete_person field.
func (r *mutationResolver) DeletePerson(ctx context.Context, personID string) (*model.PostStatus, error) {
	panic(fmt.Errorf("not implemented: DeletePerson - delete_person"))
}

// GetPersons is the resolver for the get_persons field.
func (r *queryResolver) GetPersons(ctx context.Context, id string) ([]*model.Person, error) {
	panic(fmt.Errorf("not implemented: GetPersons - get_persons"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
